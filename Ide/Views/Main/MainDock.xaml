<UserControl x:Class="Ide.Views.Main.MainDock"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:xcad="http://schemas.xceed.com/wpf/xaml/avalondock"
             xmlns:behavior="clr-namespace:Views.Behavior"
             xmlns:adp="clr-namespace:Xceed.Wpf.AvalonDock.Properties;assembly=Xceed.Wpf.AvalonDock"
             xmlns:views="clr-namespace:Views"
             xmlns:editors="clr-namespace:Views.Editors;assembly=IdeEditor"
             mc:Ignorable="d" 
             d:DesignHeight="300" d:DesignWidth="300">
   
    <xcad:DockingManager x:Name                                   ="DockManager"
            AnchorablesSource                                     ="{Binding Tools}" 
			DocumentsSource                                       ="{Binding Files}"
			ActiveContent                                         ="{Binding ActiveDocument, Converter={StaticResource ActiveDocumentConverter}, Mode=TwoWay}"
            behavior:AvalonDockLayoutSerializer.LoadLayoutCommand ="{Binding LoadLayoutCommand}"
            behavior:AvalonDockLayoutSerializer.SaveLayoutCommand ="{Binding SaveLayoutCommand}"
        >

        <xcad:DockingManager.DocumentContextMenu>
            <ContextMenu>
                <MenuItem Header="Open Containing Folder..." Command="{Binding Model.OpenContainingFolderCommand}"/>
                <MenuItem Header="Copy URL to Clipboard"     Command="{Binding Model.CopyFullPathtoClipboard}"/>
                <Separator/>



                <MenuItem Header="{x:Static adp:Resources.Document_Close}"                 Command="{Binding CloseCommand }" Visibility="{Binding IsEnabled, Converter={StaticResource BoolToVisibilityConverter}, Mode=OneWay, RelativeSource={RelativeSource Self}}"/>
                <MenuItem Header="{x:Static adp:Resources.Document_CloseAllButThis}"       Command="{Binding CloseAllButThisCommand}"/>
                <MenuItem Header="{x:Static adp:Resources.Document_Float}"                 Command="{Binding FloatCommand}"/>
                <MenuItem Header="{x:Static adp:Resources.Document_DockAsDocument}"        Command="{Binding DockAsDocumentCommand}"/>
                <MenuItem Header="{x:Static adp:Resources.Document_NewHorizontalTabGroup}" Command="{Binding NewHorizontalTabGroupCommand}" Visibility="{Binding IsEnabled, Converter={StaticResource BoolToVisibilityConverter}, Mode=OneWay, RelativeSource={RelativeSource Self}}">
                    <MenuItem.Icon>
                        <Image Source="/Views/Images/HTabGroup.png"  Style="{StaticResource ImageEnabled}"/>
                    </MenuItem.Icon>
                </MenuItem>
                <MenuItem Header="{x:Static adp:Resources.Document_NewVerticalTabGroup}" Command="{Binding NewVerticalTabGroupCommand}" Visibility="{Binding IsEnabled, Converter={StaticResource BoolToVisibilityConverter}, Mode=OneWay, RelativeSource={RelativeSource Self}}">
                    <MenuItem.Icon>
                        <Image Source="/Views/Images/VTabGroup.png"  Style="{StaticResource ImageEnabled}"/>
                    </MenuItem.Icon>
                </MenuItem>
                <!--<MenuItem Header="Synch Solution View to This file." Command="{Binding Model.SyncPathToExplorerCommand }" Visibility="{Binding IsEnabled, Converter={StaticResource BoolToVisibilityConverter}, Mode=OneWay, RelativeSource={RelativeSource Self}}"/>-->
            </ContextMenu>
        </xcad:DockingManager.DocumentContextMenu>
        <!-- Dock Header template -->
        <xcad:DockingManager.DocumentHeaderTemplate>
            <DataTemplate>
                <StackPanel Orientation="Horizontal">
                    <TextBlock Text="{Binding Title}" TextTrimming="CharacterEllipsis" VerticalAlignment="Center" />
                    <!-- Show IsReadOnly Icon in document tab if that properties' present and true -->
                    <Image Source="/Views/Images/Lock-icon.png" Margin="3,0,0,0" VerticalAlignment="Center">
                        <Image.Visibility>
                            <PriorityBinding FallbackValue="Collapsed" >
                                <Binding Path="Content.IsReadOnly" Mode="OneWay" Converter="{StaticResource BoolToVisibilityConverter}" />
                            </PriorityBinding>
                        </Image.Visibility>
                        <Image.ToolTip>
                            <PriorityBinding FallbackValue="">
                                <Binding Path="Content.IsReadOnlyReason" Mode="OneWay" />
                            </PriorityBinding>
                        </Image.ToolTip>
                    </Image>
                </StackPanel>
            </DataTemplate>
        </xcad:DockingManager.DocumentHeaderTemplate>

        <!-- dock theme -->
        <!--xcad:DockingManager.Theme>
                <xcad:AeroTheme/>
            </xcad:DockingManager.Theme-->

        <!--Dock template selectors-->
        <xcad:DockingManager.LayoutItemTemplateSelector>
            <views:PanesTemplateSelector>


                <!-- Data Template for Editor File documents -->

                <!--Text                ="{Binding Text,               Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, NotifyOnSourceUpdated=True, NotifyOnTargetUpdated=True}"-->

                <views:PanesTemplateSelector.FileTemplate>
                    <DataTemplate>
                        <editors:IdeEditor Name ="TextEditor"
								SyntaxHighlighting  ="{Binding HighlightDef,       Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
								IsModified          ="{Binding IsDirty,            Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
								WordWrap            ="{Binding WordWrap,           Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                FontFamily          ="{Binding FontFamily,         Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                FontSize            ="{Binding FontSize,           Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
								ShowLineNumbers     ="{Binding ShowLineNumbers,    Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
								FullPath            ="{Binding FullPath,           Mode=OneWay}"
                                Document            ="{Binding Document,           Mode=OneWay}"
								Options             ="{Binding Options}"
								IsReadOnly          ="{Binding IsReadOnly}"
                              >


                            <editors:IdeEditor.LayoutTransform>
                                <ScaleTransform 
                                        CenterX="0" CenterY="0"
                                        ScaleX="{Binding ElementName=TextEditor, Path=ScaleFactor, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                        ScaleY="{Binding ElementName=TextEditor, Path=ScaleFactor, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                        />
                            </editors:IdeEditor.LayoutTransform>

                            <editors:IdeEditor.ContextMenu>
                                <ContextMenu>
                                    <MenuItem Command="Cut" Header="Cut">
                                        <MenuItem.Icon>
                                            <Image Source="/Views/Images/EditCut.png" Height="16"/>
                                        </MenuItem.Icon>
                                    </MenuItem>
                                    <MenuItem Command="Copy" Header="Copy">
                                        <MenuItem.Icon>
                                            <Image Source="/Views/Images/EditCopy.png" Height="16"/>
                                        </MenuItem.Icon>
                                    </MenuItem>
                                    <MenuItem Command="Paste" Header="Paste">
                                        <MenuItem.Icon>
                                            <Image Source="/Views/Images/EditPaste.png" Height="16"/>
                                        </MenuItem.Icon>
                                    </MenuItem>
                                    <MenuItem Command="Delete" Header="Delete">
                                        <MenuItem.Icon>
                                            <Image Source="/Views/Images/EditDelete.png" Height="16"/>
                                        </MenuItem.Icon>
                                    </MenuItem>
                                    <MenuItem Command="Undo" Header="Undo">
                                        <MenuItem.Icon>
                                            <Image Source="/Views/Images/EditUndo.png" Height="16"/>
                                        </MenuItem.Icon>
                                    </MenuItem>
                                    <MenuItem Command="Redo" Header="Redo">
                                        <MenuItem.Icon>
                                            <Image Source="/Views/Images/EditRedo.png" Height="16"/>
                                        </MenuItem.Icon>
                                    </MenuItem>
                                </ContextMenu>
                            </editors:IdeEditor.ContextMenu>
                        </editors:IdeEditor>
                    </DataTemplate>
                </views:PanesTemplateSelector.FileTemplate>


                <!-- Error List template -->

                <views:PanesTemplateSelector.ErrorListTemplate>
                    <DataTemplate>
                        <views:ViewErrorList></views:ViewErrorList>
                    </DataTemplate>
                </views:PanesTemplateSelector.ErrorListTemplate>

                <!-- outpu list template -->

                <views:PanesTemplateSelector.OutputTemplate>
                    <DataTemplate>
                        <views:ViewOutput>></views:ViewOutput>
                    </DataTemplate>
                </views:PanesTemplateSelector.OutputTemplate>

                <!-- workspace  template -->

                <views:PanesTemplateSelector.WorkspaceTemplate>
                    <DataTemplate>
                        <views:ViewSolutionTree ></views:ViewSolutionTree>
                    </DataTemplate>
                </views:PanesTemplateSelector.WorkspaceTemplate>
            </views:PanesTemplateSelector>
        </xcad:DockingManager.LayoutItemTemplateSelector>

        <!--dock style selectors-->
        <xcad:DockingManager.LayoutItemContainerStyleSelector>
            <views:PanesStyleSelector>

                <views:PanesStyleSelector.ToolStyle>
                    <Style TargetType="{x:Type xcad:LayoutAnchorableItem}">
                        <Setter Property="Title"      Value="{Binding Model.Title}"/>
                        <Setter Property="IconSource" Value="{Binding Model.IconSource}"/>
                        <Setter Property="Visibility" Value="{Binding Model.IsVisible, ConverterParameter={x:Static Visibility.Hidden}, Converter={StaticResource BoolToVisibilityConverter}, Mode=TwoWay}"/>
                        <Setter Property="ContentId"  Value="{Binding Model.ContentId}"/>
                        <Setter Property="IsSelected" Value="{Binding Model.IsSelected, Mode=TwoWay}"/>
                        <Setter Property="IsActive"   Value="{Binding Model.IsActive, Mode=TwoWay}"/>
                    </Style>
                </views:PanesStyleSelector.ToolStyle>

                <views:PanesStyleSelector.FileStyle>
                    <Style TargetType="{x:Type xcad:LayoutItem}">
                        <Setter Property="Title"        Value="{Binding Model.Title}"/>
                        <Setter Property="ToolTip"      Value="{Binding Model.FilePath}"/>
                        <Setter Property="CloseCommand" Value="{Binding Model.CloseCommand}"/>
                        <Setter Property="IconSource"   Value="{Binding Model.IconSource}"/>
                        <Setter Property="ContentId"    Value="{Binding Model.ContentId}"/>
                    </Style>
                </views:PanesStyleSelector.FileStyle>


                <views:PanesStyleSelector.WorkspaceStyle>
                    <Style TargetType="{x:Type xcad:LayoutItem}">
                        <Setter Property="Title"        Value="{Binding Model.Title}"/>
                        <Setter Property="ToolTip"      Value="{Binding Model.FullPath}"/>
                        <Setter Property="Visibility"   Value="{Binding Model.IsVisible, Mode=TwoWay, Converter={StaticResource BoolToVisibilityConverter}, ConverterParameter={x:Static Visibility.Hidden}}"/>
                        <Setter Property="CloseCommand" Value="{Binding Model.CloseCommand}"/>
                        <Setter Property="IconSource"   Value="{Binding Model.IconSource}"/>
                        <Setter Property="ContentId"    Value="{Binding Model.ContentId}"/>
                    </Style>
                </views:PanesStyleSelector.WorkspaceStyle>

            </views:PanesStyleSelector>
        </xcad:DockingManager.LayoutItemContainerStyleSelector>

        <!--dock layout update strategy -->
        <xcad:DockingManager.LayoutUpdateStrategy>
            <views:LayoutInitializer/>
        </xcad:DockingManager.LayoutUpdateStrategy>

        <!-- dock layout -->
        <xcad:LayoutRoot>
            <xcad:LayoutRoot.LeftSide>
                <xcad:LayoutAnchorSide>
                </xcad:LayoutAnchorSide>
            </xcad:LayoutRoot.LeftSide>
            <xcad:LayoutPanel Orientation="Horizontal">
                <xcad:LayoutDocumentPane/>
                <xcad:LayoutAnchorablePane Name="ToolsPane" DockHeight="150"/>
            </xcad:LayoutPanel>
        </xcad:LayoutRoot>
    </xcad:DockingManager>
</UserControl>
